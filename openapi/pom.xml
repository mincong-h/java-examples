<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>io.mincong</groupId>
    <artifactId>java-examples-parent</artifactId>
    <version>1.0.0-SNAPSHOT</version>
  </parent>

  <artifactId>java-examples-openapi</artifactId>
  <name>Java Examples - Open API (JAX-RS)</name>

  <properties>
    <openapi-generator.version>6.0.1</openapi-generator.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <!-- This is the plugin for handling the generation of Open API -->
      <plugin>
        <groupId>org.openapitools</groupId>
        <artifactId>openapi-generator-maven-plugin</artifactId>
        <version>${openapi-generator.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <!-- Here we point to the Open API spec -->
              <inputSpec>
                ${project.basedir}/src/main/resources/jimi-search.yml
              </inputSpec>
              <!-- https://github.com/OpenAPITools/openapi-generator/blob/master/docs/generators/spring.md -->
              <generatorName>spring</generatorName>
              <!-- This is the Java package base on which the generated files will
              be located -->
              <apiPackage>com.baeldung.openapi.api</apiPackage>
              <!-- Model classes are also generated -->
              <modelPackage>com.baeldung.openapi.model</modelPackage>
              <!-- TODO why do we need this? -->
              <supportingFilesToGenerate>
                ApiUtil.java
              </supportingFilesToGenerate>
              <!--
              we're asking to create an interface that can be implemented as a customized @Service class.
              -->
              <configOptions>
                <delegatePattern>true</delegatePattern>
              </configOptions>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.jboss.jandex</groupId>
        <artifactId>jandex-maven-plugin</artifactId>
        <version>1.2.3</version>
        <executions>
          <execution>
            <phase>compile</phase>
            <id>make-index</id>
            <goals>
              <goal>jandex</goal>
            </goals>
            <configuration>
              <fileSets>
                <fileSet>
                  <directory>${project.build.outputDirectory}</directory>
                </fileSet>
              </fileSets>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

</project>
