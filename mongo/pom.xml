<?xml version="1.0"?>
<project
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
  xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>io.mincong</groupId>
    <artifactId>java-examples-parent</artifactId>
    <version>1.0.0-SNAPSHOT</version>
  </parent>
  <artifactId>java-examples-mongo</artifactId>
  <name>Java Examples - MongoDB</name>

  <properties>
    <fongoVersion>2.2.0-RC2</fongoVersion>
    <logbackVersion>1.2.3</logbackVersion>
    <mongoVersion>3.6</mongoVersion>
    <mongoDriverVersion>3.6.2</mongoDriverVersion>
    <mongoJavaServerVersion>1.33.0</mongoJavaServerVersion>
    <slf4jVersion>1.7.30</slf4jVersion>
  </properties>

  <dependencies>
    <!-- test -->
    <dependency>
      <groupId>com.github.fakemongo</groupId>
      <artifactId>fongo</artifactId>
      <version>${fongoVersion}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>de.bwaldvogel</groupId>
      <artifactId>mongo-java-server</artifactId>
      <version>${mongoJavaServerVersion}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mongodb</groupId>
      <artifactId>mongo-java-driver</artifactId>
      <version>${mongoDriverVersion}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mongodb</groupId>
      <artifactId>bson</artifactId>
      <version>${mongoDriverVersion}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.vintage</groupId>
      <artifactId>junit-vintage-engine</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-core</artifactId>
      <version>${logbackVersion}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>${logbackVersion}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4jVersion}</version>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>io.fabric8</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <configuration>
          <watchInterval>500</watchInterval>
          <logDate>default</logDate>
          <verbose>true</verbose>
          <images>
            <image>
              <name>mongo:${mongoVersion}</name>
              <run>
                <ports>
                  <port>27017:27017</port>
                </ports>
                <log>
                  <prefix>Mongo:</prefix>
                  <enabled>true</enabled>
                  <color>yellow</color>
                </log>
                <wait>
                  <!-- internal port, multiline matching -->
                  <log>.*waiting for connections on port 27017</log>
                  <time>30000</time><!-- 30 seconds max -->
                </wait>
              </run>
            </image>
          </images>
        </configuration>
        <!--
          Connect this plugin to the maven lifecycle around the integration-test phase:
          start the container in pre-integration-test and stop it in post-integration-test.
        -->
        <executions>
          <execution>
            <id>start</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>build</goal>
              <goal>start</goal>
            </goals>
          </execution>
          <execution>
            <id>stop</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>stop</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>skip-tests</id>
      <activation>
        <activeByDefault>false</activeByDefault>
        <property>
          <name>skipTests</name>
        </property>
      </activation>
      <properties>
        <docker.skip>true</docker.skip>
      </properties>
    </profile>
  </profiles>
</project>
